---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: interfacemaps.k8s.cni.cncf.io
spec:
  group: k8s.cni.cncf.io
  names:
    kind: InterfaceMap
    listKind: InterfaceMapList
    plural: interfacemaps
    singular: interfacemap
  scope: Namespaced
  versions:
  - name: v1
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            type: array
            items:
              type: object
              properties:
                interface:
                  type: string
                network:
                  type: string
---
apiVersion: "k8s.cni.cncf.io/v1"
kind: InterfaceMap
metadata:
  name: hostfoo
spec:
  - interface: "eth0"
    network: "blue"
  - interface: "ens4"
    network: "red"
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: chainsaw-cni
rules:
  - apiGroups: ["k8s.cni.cncf.io"]
    resources:
      - '*'
    verbs:
      - '*'
  - apiGroups:
      - ""
    resources:
      - pods
      - pods/status
    verbs:
      - get
      - update
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
      - update
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: chainsaw-cni
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: chainsaw-cni
subjects:
- kind: ServiceAccount
  name: chainsaw-cni
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: chainsaw-cni
  namespace: kube-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kube-chainsaw-cni-ds
  namespace: kube-system
  labels:
    tier: node
    app: chainsaw-cni
    name: chainsaw-cni
spec:
  selector:
    matchLabels:
      name: chainsaw-cni
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        tier: node
        app: chainsaw-cni
        name: chainsaw-cni
    spec:
      hostNetwork: true
      tolerations:
      - operator: Exists
        effect: NoSchedule
      - operator: Exists
        effect: NoExecute
      serviceAccountName: chainsaw-cni
      containers:
      - name: kube-chainsaw-cni
        image: docker.io/dougbtv/chainsaw-cni:latest
        imagePullPolicy: Always
        command: ["/entrypoint.sh"]
        resources:
          requests:
            cpu: "100m"
            memory: "50Mi"
          limits:
            cpu: "100m"
            memory: "50Mi"
        securityContext:
          privileged: true
        volumeMounts:
        - name: cni
          mountPath: /host/etc/cni/net.d
        - name: cnibin
          mountPath: /host/opt/cni/bin
        - name: socketpath
          mountPath: /host/var/run/chainsaw-cni
      initContainers:
        - name: install-chainsaw-cni-binary
          image: docker.io/dougbtv/chainsaw-cni:latest
          command:
            - "cp"
            - "/usr/src/chainsaw-cni/bin/chainsaw"
            - "/host/opt/cni/bin/chainsaw"
          resources:
            requests:
              cpu: "10m"
              memory: "15Mi"
          securityContext:
            privileged: true
          volumeMounts:
            - name: cnibin
              mountPath: /host/opt/cni/bin
              mountPropagation: Bidirectional
      terminationGracePeriodSeconds: 10
      volumes:
        - name: cni
          hostPath:
            path: /etc/cni/net.d
        - name: cnibin
          hostPath:
            path: /opt/cni/bin
        - name: socketpath
          hostPath:
            path: /var/run/chainsaw-cni
            type: DirectoryOrCreate